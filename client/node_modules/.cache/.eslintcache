[{"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\index.js":"1","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\App.js":"2","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Main page.js":"4","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Admin.js":"5","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\User.js":"6","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Task.js":"7","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\CreateUpdateTask.js":"8","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Solutions.js":"9","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\AlertSolution.js":"10","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\DescriptionMarkdown.js":"11","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskName.js":"12","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskDescription.js":"13","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskTopic.js":"14","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Solution.js":"15","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\config\\authMethod.js":"16","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\config\\firebase.config.js":"17","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Login.js":"18"},{"size":513,"mtime":1633611144037,"results":"19","hashOfConfig":"20"},{"size":436,"mtime":1633543623391,"results":"21","hashOfConfig":"20"},{"size":1309,"mtime":1633622285296,"results":"22","hashOfConfig":"20"},{"size":1483,"mtime":1633620145162,"results":"23","hashOfConfig":"20"},{"size":879,"mtime":1633538192824,"results":"24","hashOfConfig":"20"},{"size":3628,"mtime":1633623118251,"results":"25","hashOfConfig":"20"},{"size":3389,"mtime":1633538192893,"results":"26","hashOfConfig":"20"},{"size":4688,"mtime":1633538412141,"results":"27","hashOfConfig":"20"},{"size":2245,"mtime":1633538192840,"results":"28","hashOfConfig":"20"},{"size":472,"mtime":1633538192956,"results":"29","hashOfConfig":"20"},{"size":233,"mtime":1633517147883,"results":"30","hashOfConfig":"20"},{"size":608,"mtime":1633539142876,"results":"31","hashOfConfig":"20"},{"size":657,"mtime":1633539143076,"results":"32","hashOfConfig":"20"},{"size":863,"mtime":1633539142929,"results":"33","hashOfConfig":"20"},{"size":802,"mtime":1633538192925,"results":"34","hashOfConfig":"20"},{"size":191,"mtime":1633542255323,"results":"35","hashOfConfig":"20"},{"size":616,"mtime":1633542132785,"results":"36","hashOfConfig":"20"},{"size":611,"mtime":1633621175638,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"17eg8l8",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\index.js",["80"],"import React, {createContext, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport firebase from \"firebase/compat\";\n\nconst auth = firebase.auth();\nexport const Context = createContext(null);\n\nReactDOM.render(\n    <Context.Provider value={{auth}}><App/> </Context.Provider>,\n    document.getElementById('root')\n)\n;\n\n",["81","82"],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\App.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Main page.js",["83","84"],"import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport firebase from \"../config/firebase.config\";\r\nimport {facebookProvider, twitterProvider} from \"../config/authMethod\";\r\nimport Axios from \"axios\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const socialMediaAuth = (provider) => {\r\n        firebase.auth().signInWithPopup(provider).then(res => {\r\n            const user = {name: res.user.displayName}\r\n            Axios.get(\"api/users/byName\", {params: {name: res.user.displayName}}).then(res => {\r\n                if (res.data === null) {\r\n                    Axios.post(\"api/users\", user).then()\r\n                }\r\n            });\r\n        }).catch((error) => {\r\n            console.log(error)\r\n            return error;\r\n        });\r\n    }\r\n\r\n    const handleOnClick = async (provider) => {\r\n        await socialMediaAuth(provider)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"mt-2\">\r\n                <a className=\"btn btn-block btn-social btn-facebook\" onClick={() => handleOnClick(facebookProvider)}>\r\n                    <i className=\"fa fa-facebook\"/>Sign in with Facebook\r\n                </a>\r\n            </Col>\r\n            <Col className=\"mt-2\">\r\n                <a className=\"btn btn-block btn-social btn-twitter\" onClick={() => handleOnClick(twitterProvider)}>\r\n                    <i className=\"fa fa-twitter\"/> Sign in with Twitter\r\n                </a>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Admin.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\User.js",["85"],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Task.js",["86"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport {Button, FormControl, InputGroup} from 'react-bootstrap';\r\nimport AlertSolution from './AlertSolution';\r\nimport DescriptionMarkdown from './DescriptionMarkdown';\r\n\r\nconst Task = () => {\r\n    const {id, taskId} = useParams();\r\n    const [task, setTask] = useState({});\r\n    const [solved, setSolved] = useState(false);\r\n    const [solution, setSolution] = useState(\"\");\r\n    const [enter, setEnter] = useState(false);\r\n    const [correct, setCorrect] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/users/${id}`).then(response => {\r\n            setCurrentUser(response.data);\r\n            getUserTask(response.data.tasks);\r\n        })\r\n    }, []);\r\n\r\n    function getUserTask(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].id.toString() === taskId.toString()) {\r\n                setTask(data[i])\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkSolution() {\r\n        setEnter(true);\r\n        let array = task.solutions.split(' ');\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (solution && array[i].toLowerCase() === solution.toLowerCase().trim()) {\r\n                const solvedTask = {taskId: taskId, solution: solution, userId: id}\r\n                Axios.get(\"/api/completeTasks\", {params: {taskId: taskId, userId: id}}).then(response => {\r\n                    if (response.data === null) {\r\n                        Axios.post(`/api/completeTasks`, solvedTask).then()\r\n                        Axios.put(`/api/users/${id}`, {solvedTasks: currentUser.solvedTasks + 1}).then()\r\n                    } else {\r\n                        setSolved(true);\r\n                    }\r\n                })\r\n                setCorrect(true);\r\n                return;\r\n            }\r\n        }\r\n        setCorrect(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container py-4\">\r\n                <header className=\"pb-3 mb-4 border-bottom\">\r\n                    <span className=\"fs-4 fw-bold\">{task.name}</span>\r\n                </header>\r\n                <div className=\"p-5 mb-4 bg-light rounded-3\">\r\n                    <div className=\"container-fluid py-5\">\r\n                        <h3 className=\"display-5\">{task.topic}</h3>\r\n                        <p className=\"col-md-12 fs-4\">\r\n                            <DescriptionMarkdown text={task.description}/></p>\r\n                        {enter === true ? <AlertSolution class={correct} solved={solved}/> : \"\"}\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                placeholder=\"Enter solution\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e) => {\r\n                                    setSolution(e.target.value)\r\n                                }}\r\n                            />\r\n                            <Button variant=\"success\" onClick={() => checkSolution()}>\r\n                                Check solution\r\n                            </Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\CreateUpdateTask.js",["87"],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Button, Container} from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport Solutions from './Solutions';\r\nimport TaskName from './TaskName';\r\nimport TaskDescription from './TaskDescription';\r\nimport TaskTopic from './TaskTopic';\r\n\r\nconst CreateUpdateTask = () => {\r\n    const {id, taskId} = useParams();\r\n    let history = useHistory();\r\n    const [currentUser, setCurrentUser] = useState({});\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [topic, setTopic] = useState(\"\");\r\n    const [solutions, setSolutions] = useState(\"\");\r\n\r\n    const [nameToUpdate, setNameToUpdate] = useState(\"\");\r\n    const [descriptionToUpdate, setDescriptionToUpdate] = useState(\"\");\r\n    const [topicToUpdate, setTopicToUpdate] = useState(\"\");\r\n    const [solutionsToUpdate, setSolutionsToUpdate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/users/${id}`).then(response => {\r\n            setCurrentUser(response.data);\r\n        });\r\n        if (isUpdating() === true) {\r\n            Axios.get(`/api/tasks/${taskId}`).then(response => {\r\n                    setNameToUpdate(response.data.name);\r\n                    setDescriptionToUpdate(response.data.description);\r\n                    setTopicToUpdate(response.data.topic);\r\n                    setSolutionsToUpdate(response.data.solutions);\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n\r\n    function createTask() {\r\n        const newTask = {\r\n            name: name,\r\n            description: description,\r\n            topic: topic,\r\n            solutions: solutions,\r\n            userId: id\r\n        }\r\n        Axios.post(\"/api/tasks\", newTask).then();\r\n        Axios.put(`/api/users/${id}`, {createdTasks: currentUser.createdTasks + 1}).then();\r\n        history.push(`/user/${id}`);\r\n    }\r\n\r\n    async function updateTask() {\r\n        const taskToUpdate = {\r\n            name: nameToUpdate,\r\n            description: descriptionToUpdate,\r\n            topic: topicToUpdate,\r\n            solutions: solutionsToUpdate\r\n        }\r\n        await Axios.put(`/api/tasks/${taskId}`, taskToUpdate).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    function isUpdating() {\r\n        if (taskId > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function getName(data) {\r\n        setName(data);\r\n    }\r\n\r\n    function getNameToUpdate(data) {\r\n        setNameToUpdate(data);\r\n    }\r\n\r\n    function getDescription(data) {\r\n        setDescription(data);\r\n    }\r\n\r\n    function getDescriptionToUpdate(data) {\r\n        setDescriptionToUpdate(data);\r\n    }\r\n\r\n    function getTopic(data) {\r\n        setTopic(data);\r\n    }\r\n\r\n    function getTopicToUpdate(data) {\r\n        setTopicToUpdate(data);\r\n    }\r\n\r\n\r\n    function getSolutionsCreate(data) {\r\n        setSolutions(data);\r\n    }\r\n\r\n    function getSolutionsUpdate(data) {\r\n        setSolutionsToUpdate(data);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Container>\r\n                <TaskName name={(data) => getName(data)}\r\n                          nameUpdate={(data) => getNameToUpdate(data)}\r\n                          isUpdating={isUpdating}\r\n                          nameToUpdate={nameToUpdate}/>\r\n                <TaskDescription description={(data) => getDescription(data)}\r\n                                 descriptionUpdate={(data) => getDescriptionToUpdate(data)}\r\n                                 isUpdating={isUpdating}\r\n                                 descriptionToUpdate={descriptionToUpdate}/>\r\n                <TaskTopic topic={(data) => getTopic(data)}\r\n                           topicUpdate={(data) => getTopicToUpdate(data)}\r\n                           isUpdating={isUpdating}\r\n                           topicToUpdate={topicToUpdate}/>\r\n                <Solutions solutionsCreate={(data) => getSolutionsCreate(data)}\r\n                           solutionForUpdate={solutionsToUpdate} solutionsUpdate={(data) => getSolutionsUpdate(data)}\r\n                           isUpdating={isUpdating()}/>\r\n                <Button onClick={isUpdating() === true ? updateTask : createTask} variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button style={{margin: \"30px\"}} onClick={() => {\r\n                    history.push(`/user/${id}`)\r\n                }} variant=\"secondary\" type=\"submit\">\r\n                    Cancel\r\n                </Button>\r\n            </Container>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateTask;","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Solutions.js",["88"],"import React, {useEffect, useState} from 'react';\r\nimport Solution from './Solution';\r\n\r\nconst Solutions = (props) => {\r\n    const [solution1, setSolution1] = useState(\"\");\r\n    const [solution2, setSolution2] = useState(\"\");\r\n    const [solution3, setSolution3] = useState(\"\");\r\n    const [solution1ForUpdate, setSolution1ForUpdate] = useState(\"\");\r\n    const [solution2ForUpdate, setSolution2ForUpdate] = useState(\"\");\r\n    const [solution3ForUpdate, setSolution3ForUpdate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (props.isUpdating === true) {\r\n            let str = [solution1ForUpdate, solution2ForUpdate, solution3ForUpdate]\r\n            props.solutionsUpdate(str.join(\" \"));\r\n        } else {\r\n            let strings = [solution1, solution2, solution3]\r\n            props.solutionsCreate(strings.join(\" \"));\r\n        }\r\n    }, [solution1, solution2, solution3]);\r\n\r\n    function getSolution1(data) {\r\n        setSolution1(data);\r\n    }\r\n\r\n    function getSolution2(data) {\r\n        setSolution2(data);\r\n    }\r\n\r\n    function getSolution3(data) {\r\n        setSolution3(data);\r\n    }\r\n\r\n    function getSolution1ToUpdate(data) {\r\n        setSolution1ForUpdate(data);\r\n    }\r\n\r\n    function getSolution2ToUpdate(data) {\r\n        setSolution2ForUpdate(data);\r\n    }\r\n\r\n    function getSolution3ToUpdate(data) {\r\n        setSolution3ForUpdate(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Solution number={1} index={0} solutionForUpdate={props.solutionForUpdate}\r\n                      solution={(data) => getSolution1(data)} isUpdating={props.isUpdating}\r\n                      solutionToUpdate={(data) => getSolution1ToUpdate(data)}/>\r\n            <Solution number={2} index={1} solutionForUpdate={props.solutionForUpdate}\r\n                      solution={(data) => getSolution2(data)} isUpdating={props.isUpdating}\r\n                      solutionToUpdate={(data) => getSolution2ToUpdate(data)}/>\r\n            <Solution number={3} index={2} solutionForUpdate={props.solutionForUpdate}\r\n                      solution={(data) => getSolution3(data)} isUpdating={props.isUpdating}\r\n                      solutionToUpdate={(data) => getSolution3ToUpdate(data)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Solutions;","C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\AlertSolution.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\DescriptionMarkdown.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskName.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskDescription.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\TaskTopic.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Solution.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\config\\authMethod.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\config\\firebase.config.js",[],"C:\\Users\\malyn\\WebstormProjects\\Course_project\\client\\src\\components\\Login.js",["89","90"],{"ruleId":"91","severity":1,"message":"92","line":1,"column":31,"nodeType":"93","messageId":"94","endLine":1,"endColumn":39},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":30,"column":17,"nodeType":"101","endLine":30,"endColumn":118},{"ruleId":"99","severity":1,"message":"100","line":35,"column":17,"nodeType":"101","endLine":35,"endColumn":116},{"ruleId":"102","severity":1,"message":"103","line":55,"column":8,"nodeType":"104","endLine":55,"endColumn":10,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":22,"column":8,"nodeType":"104","endLine":22,"endColumn":10,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"108","line":38,"column":8,"nodeType":"104","endLine":38,"endColumn":10,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"110","line":20,"column":8,"nodeType":"104","endLine":20,"endColumn":41,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"102","severity":1,"message":"112","line":16,"column":8,"nodeType":"104","endLine":16,"endColumn":10,"suggestions":"113"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has missing dependencies: 'getUserTask' and 'id'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'id', 'isUpdating', and 'taskId'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'props', 'solution1ForUpdate', 'solution2ForUpdate', and 'solution3ForUpdate'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["119"],"React Hook useEffect has missing dependencies: 'history' and 'props.userName'. Either include them or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [id]",{"range":"131","text":"132"},"Update the dependencies array to be: [getUserTask, id]",{"range":"133","text":"134"},"Update the dependencies array to be: [id, isUpdating, taskId]",{"range":"135","text":"136"},"Update the dependencies array to be: [props, solution1, solution1ForUpdate, solution2, solution2ForUpdate, solution3, solution3ForUpdate]",{"range":"137","text":"138"},"Update the dependencies array to be: [history, props.userName]",{"range":"139","text":"140"},[1680,1682],"[id]",[851,853],"[getUserTask, id]",[1540,1542],"[id, isUpdating, taskId]",[847,880],"[props, solution1, solution1ForUpdate, solution2, solution2ForUpdate, solution3, solution3ForUpdate]",[496,498],"[history, props.userName]"]