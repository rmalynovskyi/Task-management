{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malyn\\\\WebstormProjects\\\\Course_project\\\\client\\\\src\\\\components\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport { Card, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [user, setUser] = useState({});\n  const [userTasks, setUserTasks] = useState([]);\n  const [selectedId, setSelectedId] = useState(0);\n\n  const linkFollow = (cell, row, rowIndex, formatExtraData) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Open Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = [{\n    dataField: 'id',\n    text: 'Task id',\n    sort: true\n  }, {\n    dataField: 'name',\n    text: 'Task name',\n    sort: true,\n    filter: textFilter()\n  }, {\n    text: \"Open task\",\n    formatter: linkFollow(),\n    sort: true\n  }];\n  const selectRow = {\n    mode: 'checkbox',\n    clickToSelect: true,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (isSelect) {\n        setSelectedId(row.id);\n      } else {\n        setSelectedId([]);\n      }\n    }\n  };\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/api/users/${id}`).then(response => {\n      setUser(response.data);\n      setUserTasks(response.data.tasks);\n    });\n  }, []);\n\n  function addTask() {\n    history.push(`/user/${id}/createUpdate`);\n  }\n\n  async function deleteTask() {\n    await Axios.delete(`http://localhost:3001/api/tasks/${selectedId}`).then(setUserTasks(userTasks.filter(user => user.id !== selectedId)));\n  }\n\n  function updateTask() {\n    history.push(`/user/${id}/createUpdate/${selectedId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userInfo\",\n    children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n      bootstrap4: true,\n      keyField: \"id\",\n      data: userTasks,\n      columns: columns,\n      filter: filterFactory(),\n      selectRow: selectRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"15px\"\n      },\n      variant: \"primary\",\n      onClick: addTask,\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"15px\"\n      },\n      variant: \"danger\",\n      onClick: deleteTask,\n      children: \"Delete task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"15px\"\n      },\n      variant: \"warning\",\n      onClick: updateTask,\n      children: \"Update task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      body: true,\n      children: [\"Solved tasks: \", user.solvedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      body: true,\n      children: [\"Created tasks: \", user.createdTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"+6iauBAg+elJJgdpxHFRHNOB0dI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/User.js"],"names":["React","useEffect","useState","useHistory","useParams","Axios","BootstrapTable","filterFactory","textFilter","Card","Button","User","id","history","user","setUser","userTasks","setUserTasks","selectedId","setSelectedId","linkFollow","cell","row","rowIndex","formatExtraData","columns","dataField","text","sort","filter","formatter","selectRow","mode","clickToSelect","onSelect","isSelect","e","get","then","response","data","tasks","addTask","push","deleteTask","delete","updateTask","margin","solvedTasks","createdTasks"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, {textFilter} from 'react-bootstrap-table2-filter';\r\nimport {Card, Button} from \"react-bootstrap\";\r\n\r\nconst User = () => {\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({});\r\n    const [userTasks, setUserTasks] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const linkFollow = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <Button>\r\n                Open Task\r\n            </Button>\r\n        );\r\n    };\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'Task id',\r\n        sort: true\r\n    }, {\r\n        dataField: 'name',\r\n        text: 'Task name',\r\n        sort: true,\r\n        filter: textFilter()\r\n    },\r\n        {\r\n            text: \"Open task\",\r\n            formatter: linkFollow(),\r\n            sort: true\r\n        }];\r\n\r\n    const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n            if (isSelect) {\r\n                setSelectedId(row.id);\r\n            } else {\r\n                setSelectedId([]);\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:3001/api/users/${id}`).then(response => {\r\n            setUser(response.data);\r\n            setUserTasks(response.data.tasks)\r\n        })\r\n    }, [])\r\n\r\n    function addTask() {\r\n        history.push(`/user/${id}/createUpdate`);\r\n    }\r\n\r\n    async function deleteTask() {\r\n        await Axios.delete(`http://localhost:3001/api/tasks/${selectedId}`).then(\r\n            setUserTasks(userTasks.filter(user => user.id !== selectedId))\r\n        )\r\n    }\r\n\r\n    function updateTask() {\r\n        history.push(`/user/${id}/createUpdate/${selectedId}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"userInfo\">\r\n            <BootstrapTable bootstrap4={true} keyField='id' data={userTasks} columns={columns}\r\n                            filter={filterFactory()} selectRow={selectRow}/>\r\n            <Button style={{margin: \"15px\"}} variant=\"primary\" onClick={addTask}>Add task</Button>\r\n            <Button style={{margin: \"15px\"}} variant=\"danger\" onClick={deleteTask}>Delete task</Button>\r\n            <Button style={{margin: \"15px\"}} variant=\"warning\" onClick={updateTask}>Update task</Button>\r\n            <Card body>Solved tasks: {user.solvedTasks}</Card>\r\n            <Card body>Created tasks: {user.createdTasks}</Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}