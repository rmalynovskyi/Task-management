{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malyn\\\\WebstormProjects\\\\Course_project\\\\client\\\\src\\\\components\\\\CreateUpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUpdateTask = () => {\n  _s();\n\n  const {\n    id,\n    taskId\n  } = useParams();\n  let history = useHistory();\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskTopic, setTaskTopic] = useState(\"\");\n\n  async function createTask() {\n    const newTask = {\n      name: taskName,\n      topic: taskTopic,\n      userId: id\n    };\n    await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(history.push(`/user/${id}`));\n  }\n  /*  async function updateTask() {\r\n        const updatedTask = {name: taskName, topic: taskTopic}\r\n        await Axios.put(`http://localhost:3001/api/tasks/${id}`, newTask).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }*/\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        onChange: e => {\n          setTaskName(e.target.value);\n        },\n        type: \"text\",\n        placeholder: \"Enter task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        onChange: e => {\n          setTaskTopic(e.target.value);\n        },\n        type: \"text\",\n        placeholder: \"Enter task topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createTask,\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"30px\"\n      },\n      onClick: () => {\n        history.push(`/user/${id}`);\n      },\n      variant: \"secondary\",\n      type: \"submit\",\n      children: [\"Cancel\", console.log(id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateUpdateTask, \"uCKq2Kf0qTdNAr6mQ6vEbeS4JLA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CreateUpdateTask;\nexport default CreateUpdateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUpdateTask\");","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/CreateUpdateTask.js"],"names":["React","useState","Form","Button","Axios","useHistory","useParams","CreateUpdateTask","id","taskId","history","taskName","setTaskName","taskTopic","setTaskTopic","createTask","newTask","name","topic","userId","post","then","push","e","target","value","margin","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,MAAeH,SAAS,EAA9B;AACA,MAAII,OAAO,GAAGL,UAAU,EAAxB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAec,UAAf,GAA4B;AACxB,UAAMC,OAAO,GAAG;AAACC,MAAAA,IAAI,EAAEN,QAAP;AAAiBO,MAAAA,KAAK,EAAEL,SAAxB;AAAmCM,MAAAA,MAAM,EAAEX;AAA3C,KAAhB;AACA,UAAMJ,KAAK,CAACgB,IAAN,CAAW,iCAAX,EAA8CJ,OAA9C,EAAuDK,IAAvD,CACFX,OAAO,CAACY,IAAR,CAAc,SAAQd,EAAG,EAAzB,CADE,CAAN;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AAEI,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,EAAGe,CAAD,IAAO;AAC3BX,UAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,SAFD;AAEG,QAAA,IAAI,EAAC,MAFR;AAEe,QAAA,WAAW,EAAC;AAF3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,EAAGF,CAAD,IAAO;AAC3BT,UAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,SAFD;AAEG,QAAA,IAAI,EAAC,MAFR;AAEe,QAAA,WAAW,EAAC;AAF3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAcI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,UAAjB;AAA6B,MAAA,OAAO,EAAC,SAArC;AAA+C,MAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAiBI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACW,QAAAA,MAAM,EAAE;AAAT,OAAf;AAAiC,MAAA,OAAO,EAAE,MAAM;AAC5ChB,QAAAA,OAAO,CAACY,IAAR,CAAc,SAAQd,EAAG,EAAzB;AACH,OAFD;AAEG,MAAA,OAAO,EAAC,WAFX;AAEuB,MAAA,IAAI,EAAC,QAF5B;AAAA,2BAKKmB,OAAO,CAACC,GAAR,CAAYpB,EAAZ,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA/CD;;GAAMD,gB;UACmBD,S,EACPD,U;;;KAFZE,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst CreateUpdateTask = () => {\r\n    const {id, taskId} = useParams();\r\n    let history = useHistory();\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskTopic, setTaskTopic] = useState(\"\");\r\n\r\n    async function createTask() {\r\n        const newTask = {name: taskName, topic: taskTopic, userId: id}\r\n        await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    /*  async function updateTask() {\r\n          const updatedTask = {name: taskName, topic: taskTopic}\r\n          await Axios.put(`http://localhost:3001/api/tasks/${id}`, newTask).then(\r\n              history.push(`/user/${id}`)\r\n          );\r\n      }*/\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Task name</Form.Label>\r\n                <Form.Control onChange={(e) => {\r\n                    setTaskName(e.target.value)\r\n                }} type=\"text\" placeholder=\"Enter task name\"/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control onChange={(e) => {\r\n                    setTaskTopic(e.target.value)\r\n                }} type=\"text\" placeholder=\"Enter task topic\"/>\r\n            </Form.Group>\r\n            <Button onClick={createTask} variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            <Button style={{margin: \"30px\"}} onClick={() => {\r\n                history.push(`/user/${id}`);\r\n            }} variant=\"secondary\" type=\"submit\">\r\n                Cancel\r\n                {/*{console.log(taskId)}*/}\r\n                {console.log(id)}\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateTask;"]},"metadata":{},"sourceType":"module"}