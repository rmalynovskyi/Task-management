{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button,Container}from\"react-bootstrap\";import Axios from\"axios\";import{useHistory,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateUpdateTask=function CreateUpdateTask(){var _useParams=useParams(),id=_useParams.id,taskId=_useParams.taskId;var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),taskName=_useState2[0],setTaskName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),taskTopic=_useState4[0],setTaskTopic=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),taskNameToUpdate=_useState6[0],setTaskNameToUpdate=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),taskTopicToUpdate=_useState8[0],setTaskTopicToUpdate=_useState8[1];function createTask(){return _createTask.apply(this,arguments);}function _createTask(){_createTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newTask;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newTask={name:taskName,topic:taskTopic,userId:id};_context.next=3;return Axios.post(\"/api/tasks\",newTask).then(history.push(\"/user/\".concat(id)));case 3:case\"end\":return _context.stop();}}},_callee);}));return _createTask.apply(this,arguments);}function isUpdate(){if(taskId>0){return true;}else{return false;}}function updateTask(){return _updateTask.apply(this,arguments);}function _updateTask(){_updateTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var taskToUpdate;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:taskToUpdate={name:taskNameToUpdate,topic:taskTopicToUpdate};_context2.next=3;return Axios.put(\"/api/tasks/\".concat(taskId),taskToUpdate).then(history.push(\"/user/\".concat(id)));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _updateTask.apply(this,arguments);}useEffect(function(){if(isUpdate()===true){Axios.get(\"/api/tasks/\".concat(taskId)).then(function(response){setTaskNameToUpdate(response.data.name);setTaskTopicToUpdate(response.data.topic);});}},[]);return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Task name\"}),/*#__PURE__*/_jsx(Form.Control,{defaultValue:isUpdate()===true?taskNameToUpdate:\"\",onChange:function onChange(e){if(isUpdate()===true){setTaskNameToUpdate(e.target.value);}setTaskName(e.target.value);},type:\"text\",placeholder:\"Enter task name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Task topic\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",onChange:function onChange(e){if(isUpdate()===true){setTaskTopicToUpdate(e.target.value);}setTaskTopic(e.target.value);},type:\"text\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select task topic\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Geometry\",children:\"Geometry\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Number theory\",children:\"Number theory\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Java\",children:\"Java\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Java Script\",children:\"Java Script\"})]})]}),/*#__PURE__*/_jsx(Button,{onClick:isUpdate()===true?updateTask:createTask,variant:\"primary\",type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{style:{margin:\"30px\"},onClick:function onClick(){history.push(\"/user/\".concat(id));},variant:\"secondary\",type:\"submit\",children:\"Cancel\"})]})});};export default CreateUpdateTask;","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/CreateUpdateTask.js"],"names":["React","useEffect","useState","Form","Button","Container","Axios","useHistory","useParams","CreateUpdateTask","id","taskId","history","taskName","setTaskName","taskTopic","setTaskTopic","taskNameToUpdate","setTaskNameToUpdate","taskTopicToUpdate","setTaskTopicToUpdate","createTask","newTask","name","topic","userId","post","then","push","isUpdate","updateTask","taskToUpdate","put","get","response","data","e","target","value","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Form, Button, Container} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst CreateUpdateTask = () => {\r\n    const {id, taskId} = useParams();\r\n    let history = useHistory();\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskTopic, setTaskTopic] = useState(\"\");\r\n    const [taskNameToUpdate, setTaskNameToUpdate] = useState(\"\");\r\n    const [taskTopicToUpdate, setTaskTopicToUpdate] = useState(\"\");\r\n\r\n    async function createTask() {\r\n        const newTask = {name: taskName, topic: taskTopic, userId: id}\r\n        await Axios.post(\"/api/tasks\", newTask).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    function isUpdate() {\r\n        if (taskId > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function updateTask() {\r\n        const taskToUpdate = {name: taskNameToUpdate, topic: taskTopicToUpdate}\r\n        await Axios.put(`/api/tasks/${taskId}`, taskToUpdate).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isUpdate() === true) {\r\n            Axios.get(`/api/tasks/${taskId}`).then(response => {\r\n                    setTaskNameToUpdate(response.data.name);\r\n                    setTaskTopicToUpdate(response.data.topic);\r\n                }\r\n            );\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Form>\r\n            <Container>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Task name</Form.Label>\r\n                    <Form.Control defaultValue={isUpdate() === true ? taskNameToUpdate : \"\"} onChange={(e) => {\r\n                        if (isUpdate() === true) {\r\n                            setTaskNameToUpdate(e.target.value);\r\n                        }\r\n                        setTaskName(e.target.value)\r\n                    }} type=\"text\" placeholder=\"Enter task name\"/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Task topic</Form.Label>\r\n                    <Form.Control as=\"select\"\r\n                                  onChange={(e) => {\r\n                                      if (isUpdate() === true) {\r\n                                          setTaskTopicToUpdate(e.target.value)\r\n                                      }\r\n                                      setTaskTopic(e.target.value)\r\n                                  }} type=\"text\">\r\n                        <option value=\"\">Select task topic</option>\r\n                        <option value=\"Geometry\">Geometry</option>\r\n                        <option value=\"Number theory\">Number theory</option>\r\n                        <option value=\"Java\">Java</option>\r\n                        <option value=\"Java Script\">Java Script</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button onClick={isUpdate() === true ? updateTask : createTask} variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button style={{margin: \"30px\"}} onClick={() => {\r\n                    history.push(`/user/${id}`);\r\n                }} variant=\"secondary\" type=\"submit\">\r\n                    Cancel\r\n                </Button>\r\n            </Container>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateTask;"]},"metadata":{},"sourceType":"module"}