{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malyn\\\\WebstormProjects\\\\Course_project\\\\client\\\\src\\\\components\\\\CreateUpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUpdateTask = () => {\n  _s();\n\n  const {\n    id,\n    taskId\n  } = useParams();\n  let history = useHistory();\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskTopic, setTaskTopic] = useState(\"\");\n  const [taskNameToUpdate, setTaskNameToUpdate] = useState(\"\");\n  const [taskTopicToUpdate, setTaskTopicToUpdate] = useState(\"\");\n\n  async function createTask() {\n    const newTask = {\n      name: taskName,\n      topic: taskTopic,\n      userId: id\n    };\n    await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(history.push(`/user/${id}`));\n  }\n\n  function isUpdate() {\n    if (taskId > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async function updateTask() {\n    const taskToUpdate = {\n      name: taskNameToUpdate,\n      topic: taskTopicToUpdate\n    };\n    console.log(taskName);\n    console.log(taskTopic);\n    await Axios.put(`http://localhost:3001/api/tasks/${taskId}`, taskToUpdate).then(history.push(`/user/${id}`));\n  }\n\n  useEffect(() => {\n    if (isUpdate() === true) {\n      Axios.get(`http://localhost:3001/api/tasks/${taskId}`).then(response => {\n        setTaskNameToUpdate(response.data.name);\n        setTaskTopicToUpdate(response.data.topic);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          defaultValue: isUpdate() === true ? taskNameToUpdate : \"\",\n          onChange: e => {\n            if (isUpdate() === true) {\n              setTaskNameToUpdate(e.target.value);\n            }\n\n            setTaskName(e.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Enter task name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: isUpdate() === true ? taskTopicToUpdate : \"\",\n          onChange: e => {\n            if (isUpdate() === true) {\n              setTaskTopicToUpdate(e.target.value);\n            }\n\n            setTaskTopic(e.target.value);\n          },\n          type: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select task topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Geometry\",\n            children: \"Geometry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Number theory\",\n            children: \"Number theory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Java\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Java Script\",\n            children: \"Java Script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: isUpdate() === true ? updateTask : createTask,\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: \"30px\"\n        },\n        onClick: () => {\n          history.push(`/user/${id}`);\n        },\n        variant: \"secondary\",\n        type: \"submit\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateUpdateTask, \"qLm45Yhv5xC1TTCkiR5TCAKhk/8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CreateUpdateTask;\nexport default CreateUpdateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUpdateTask\");","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/CreateUpdateTask.js"],"names":["React","useEffect","useState","Form","Button","Container","Axios","useHistory","useParams","CreateUpdateTask","id","taskId","history","taskName","setTaskName","taskTopic","setTaskTopic","taskNameToUpdate","setTaskNameToUpdate","taskTopicToUpdate","setTaskTopicToUpdate","createTask","newTask","name","topic","userId","post","then","push","isUpdate","updateTask","taskToUpdate","console","log","put","get","response","data","e","target","value","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Form, Button, Container} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst CreateUpdateTask = () => {\r\n    const {id, taskId} = useParams();\r\n    let history = useHistory();\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskTopic, setTaskTopic] = useState(\"\");\r\n    const [taskNameToUpdate, setTaskNameToUpdate] = useState(\"\");\r\n    const [taskTopicToUpdate, setTaskTopicToUpdate] = useState(\"\");\r\n\r\n    async function createTask() {\r\n        const newTask = {name: taskName, topic: taskTopic, userId: id}\r\n        await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    function isUpdate() {\r\n        if (taskId > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function updateTask() {\r\n        const taskToUpdate = {name: taskNameToUpdate, topic: taskTopicToUpdate}\r\n        console.log(taskName);\r\n        console.log(taskTopic);\r\n        await Axios.put(`http://localhost:3001/api/tasks/${taskId}`, taskToUpdate).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isUpdate() === true) {\r\n            Axios.get(`http://localhost:3001/api/tasks/${taskId}`).then(response => {\r\n                    setTaskNameToUpdate(response.data.name);\r\n                    setTaskTopicToUpdate(response.data.topic);\r\n                }\r\n            );\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Form>\r\n            <Container>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Task name</Form.Label>\r\n                    <Form.Control defaultValue={isUpdate() === true ? taskNameToUpdate : \"\"} onChange={(e) => {\r\n                        if (isUpdate() === true) {\r\n                            setTaskNameToUpdate(e.target.value);\r\n                        }\r\n                        setTaskName(e.target.value)\r\n                    }} type=\"text\" placeholder=\"Enter task name\"/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Task topic</Form.Label>\r\n                    <Form.Control as=\"select\" defaultValue={isUpdate() === true ? taskTopicToUpdate : \"\"}\r\n                                  onChange={(e) => {\r\n                                      if (isUpdate() === true) {\r\n                                          setTaskTopicToUpdate(e.target.value)\r\n                                      }\r\n                                      setTaskTopic(e.target.value)\r\n                                  }} type=\"text\">\r\n                        <option value=\"\">Select task topic</option>\r\n                        <option value=\"Geometry\">Geometry</option>\r\n                        <option value=\"Number theory\">Number theory</option>\r\n                        <option value=\"Java\">Java</option>\r\n                        <option value=\"Java Script\">Java Script</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button onClick={isUpdate() === true ? updateTask : createTask} variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button style={{margin: \"30px\"}} onClick={() => {\r\n                    history.push(`/user/${id}`);\r\n                }} variant=\"secondary\" type=\"submit\">\r\n                    Cancel\r\n                </Button>\r\n            </Container>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateTask;"]},"metadata":{},"sourceType":"module"}