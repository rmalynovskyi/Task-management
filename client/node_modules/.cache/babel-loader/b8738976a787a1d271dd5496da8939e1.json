{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/malyn/WebstormProjects/Course_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useHistory,useParams}from\"react-router-dom\";import Axios from'axios';import BootstrapTable from'react-bootstrap-table-next';import filterFactory,{textFilter}from'react-bootstrap-table2-filter';import{Card,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var User=function User(){var _useParams=useParams(),id=_useParams.id;var history=useHistory();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userTasks=_useState4[0],setUserTasks=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedId=_useState6[0],setSelectedId=_useState6[1];var columns=[{dataField:'id',text:'Task number'},{dataField:'name',text:'Task name',sort:true,filter:textFilter()},{dataField:'topic',text:'Task topic',sort:true,filter:textFilter()},{formatter:function formatter(cellContent,row){return/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:function onClick(){return openTask(row.id);},children:\"Open task\"});}}];var selectRow={mode:'checkbox',clickToSelect:true,onSelect:function onSelect(row,isSelect,rowIndex,e){if(isSelect){setSelectedId(row.id);}else{setSelectedId([]);}}};useEffect(function(){Axios.get(\"/api/users/\".concat(id)).then(function(response){setUser(response.data);setUserTasks(response.data.tasks);});},[]);function openTask(taskId){history.push(\"/user/\".concat(id,\"/openTask/\").concat(taskId));}function addTask(){history.push(\"/user/\".concat(id,\"/createUpdate\"));}function deleteTask(){return _deleteTask.apply(this,arguments);}function _deleteTask(){_deleteTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.delete(\"/api/tasks/\".concat(selectedId)).then(setUserTasks(userTasks.filter(function(user){return user.id!==selectedId;})));case 2:case\"end\":return _context.stop();}}},_callee);}));return _deleteTask.apply(this,arguments);}function updateTask(){history.push(\"/user/\".concat(id,\"/createUpdate/\").concat(selectedId));}return/*#__PURE__*/_jsxs(\"div\",{className:\"userInfo\",children:[/*#__PURE__*/_jsx(BootstrapTable,{bootstrap4:true,keyField:\"id\",data:userTasks,columns:columns,filter:filterFactory(),selectRow:selectRow}),/*#__PURE__*/_jsx(Button,{style:{margin:\"15px\"},variant:\"primary\",onClick:addTask,children:\"Add task\"}),/*#__PURE__*/_jsx(Button,{style:{margin:\"15px\"},variant:\"danger\",onClick:deleteTask,children:\"Delete task\"}),/*#__PURE__*/_jsx(Button,{style:{margin:\"15px\"},variant:\"warning\",onClick:updateTask,children:\"Update task\"}),/*#__PURE__*/_jsxs(Card,{body:true,children:[\"Solved tasks: \",user.solvedTasks]}),/*#__PURE__*/_jsxs(Card,{body:true,children:[\"Created tasks: \",user.createdTasks]})]});};export default User;","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/User.js"],"names":["React","useEffect","useState","useHistory","useParams","Axios","BootstrapTable","filterFactory","textFilter","Card","Button","User","id","history","user","setUser","userTasks","setUserTasks","selectedId","setSelectedId","columns","dataField","text","sort","filter","formatter","cellContent","row","openTask","selectRow","mode","clickToSelect","onSelect","isSelect","rowIndex","e","get","then","response","data","tasks","taskId","push","addTask","deleteTask","delete","updateTask","margin","solvedTasks","createdTasks"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, {textFilter} from 'react-bootstrap-table2-filter';\r\nimport {Card, Button} from \"react-bootstrap\";\r\n\r\nconst User = () => {\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({});\r\n    const [userTasks, setUserTasks] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'Task number'\r\n    }, {\r\n        dataField: 'name',\r\n        text: 'Task name',\r\n        sort: true,\r\n        filter: textFilter()\r\n    }, {\r\n        dataField: 'topic',\r\n        text: 'Task topic',\r\n        sort: true,\r\n        filter: textFilter()\r\n    }, {\r\n        formatter: (cellContent, row) => {\r\n            return <Button variant=\"info\" onClick={() => openTask(row.id)}>Open task</Button>\r\n        }\r\n    }];\r\n\r\n    const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n            if (isSelect) {\r\n                setSelectedId(row.id);\r\n            } else {\r\n                setSelectedId([]);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/users/${id}`).then(response => {\r\n            setUser(response.data);\r\n            setUserTasks(response.data.tasks)\r\n        })\r\n    }, [])\r\n\r\n    function openTask(taskId) {\r\n        history.push(`/user/${id}/openTask/${taskId}`)\r\n    }\r\n\r\n    function addTask() {\r\n        history.push(`/user/${id}/createUpdate`);\r\n    }\r\n\r\n    async function deleteTask() {\r\n        await Axios.delete(`/api/tasks/${selectedId}`).then(\r\n            setUserTasks(userTasks.filter(user => user.id !== selectedId))\r\n        )\r\n    }\r\n\r\n    function updateTask() {\r\n        history.push(`/user/${id}/createUpdate/${selectedId}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"userInfo\">\r\n            <BootstrapTable bootstrap4={true} keyField='id' data={userTasks} columns={columns}\r\n                            filter={filterFactory()} selectRow={selectRow}/>\r\n            <Button style={{margin: \"15px\"}} variant=\"primary\" onClick={addTask}>Add task</Button>\r\n            <Button style={{margin: \"15px\"}} variant=\"danger\" onClick={deleteTask}>Delete task</Button>\r\n            <Button style={{margin: \"15px\"}} variant=\"warning\" onClick={updateTask}>Update task</Button>\r\n            <Card body>Solved tasks: {user.solvedTasks}</Card>\r\n            <Card body>Created tasks: {user.createdTasks}</Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}