{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malyn\\\\WebstormProjects\\\\Course_project\\\\client\\\\src\\\\components\\\\CreateUpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUpdateTask = () => {\n  _s();\n\n  const {\n    id,\n    taskId\n  } = useParams();\n  let history = useHistory();\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskTopic, setTaskTopic] = useState(\"\");\n  const [taskToUpdate, setTaskToUpdate] = useState({});\n\n  async function createTask() {\n    const newTask = {\n      name: taskName,\n      topic: taskTopic,\n      userId: id\n    };\n    await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(history.push(`/user/${id}`));\n  }\n\n  function isUpdate() {\n    if (taskId) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async function updateTask() {\n    await Axios.get(`http://localhost:3001/api/tasks/${id}`).then(response => {\n      setTaskToUpdate({\n        name: response.data.name,\n        topic: response.data.topic\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        defaultValue: isUpdate() === true ? taskToUpdate.name : \"\",\n        onChange: e => {},\n        type: \"text\",\n        placeholder: \"Enter task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        defaultValue: isUpdate() === true ? taskToUpdate.topic : \"\",\n        onChange: e => {\n          setTaskTopic(e.target.value);\n        },\n        type: \"text\",\n        placeholder: \"Enter task topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: isUpdate() === true ? updateTask : createTask,\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"30px\"\n      },\n      onClick: () => {\n        history.push(`/user/${id}`);\n      },\n      variant: \"secondary\",\n      type: \"submit\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateUpdateTask, \"lFXEbyx6E50aflfetIZiycDxKcQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CreateUpdateTask;\nexport default CreateUpdateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUpdateTask\");","map":{"version":3,"sources":["C:/Users/malyn/WebstormProjects/Course_project/client/src/components/CreateUpdateTask.js"],"names":["React","useState","Form","Button","Axios","useHistory","useParams","CreateUpdateTask","id","taskId","history","taskName","setTaskName","taskTopic","setTaskTopic","taskToUpdate","setTaskToUpdate","createTask","newTask","name","topic","userId","post","then","push","isUpdate","updateTask","get","response","data","e","target","value","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst CreateUpdateTask = () => {\r\n    const {id, taskId} = useParams();\r\n    let history = useHistory();\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskTopic, setTaskTopic] = useState(\"\");\r\n    const [taskToUpdate, setTaskToUpdate] = useState({})\r\n\r\n    async function createTask() {\r\n        const newTask = {name: taskName, topic: taskTopic, userId: id}\r\n        await Axios.post(\"http://localhost:3001/api/tasks\", newTask).then(\r\n            history.push(`/user/${id}`)\r\n        );\r\n    }\r\n\r\n    function isUpdate() {\r\n        if (taskId) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function updateTask() {\r\n        await Axios.get(`http://localhost:3001/api/tasks/${id}`).then(response => {\r\n                setTaskToUpdate({name: response.data.name, topic: response.data.topic})\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Task name</Form.Label>\r\n                <Form.Control defaultValue={isUpdate() === true ? taskToUpdate.name : \"\"} onChange={(e) => {\r\n                }} type=\"text\" placeholder=\"Enter task name\"/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control defaultValue={isUpdate() === true ? taskToUpdate.topic : \"\"} onChange={(e) => {\r\n                    setTaskTopic(e.target.value)\r\n                }} type=\"text\" placeholder=\"Enter task topic\"/>\r\n            </Form.Group>\r\n            <Button onClick={isUpdate() === true ? updateTask : createTask} variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            <Button style={{margin: \"30px\"}} onClick={() => {\r\n                history.push(`/user/${id}`);\r\n            }} variant=\"secondary\" type=\"submit\">\r\n                Cancel\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateTask;"]},"metadata":{},"sourceType":"module"}